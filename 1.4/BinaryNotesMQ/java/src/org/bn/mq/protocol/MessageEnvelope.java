
package org.bn.mq.protocol;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "MessageEnvelope", isSet = false )
    public class MessageEnvelope implements IASN1PreparedElement {
            
    @ASN1String( name = "", 
        stringType =  UniversalTag.PrintableString , isUCS = false )
    @ASN1ValueRangeConstraint ( 
		min = 0L, 
		max = 255L ) 
	   
        @ASN1Element ( name = "id", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private String id = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "deliveryReportReq", isOptional =  false , hasTag =  false  , hasDefaultValue =  true  )
    
	private Boolean deliveryReportReq = null;
                
  
        @ASN1Element ( name = "body", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private MessageBody body = null;
                
  
        
        public String getId () {
            return this.id;
        }

        

        public void setId (String value) {
            this.id = value;
        }
        
  
        
        public Boolean getDeliveryReportReq () {
            return this.deliveryReportReq;
        }

        

        public void setDeliveryReportReq (Boolean value) {
            this.deliveryReportReq = value;
        }
        
  
        
        public MessageBody getBody () {
            return this.body;
        }

        

        public void setBody (MessageBody value) {
            this.body = value;
        }
        
  
                    
        
        
        public void initWithDefaults() {
            Boolean param_DeliveryReportReq =         
            new Boolean (false);
        setDeliveryReportReq(param_DeliveryReportReq);
    
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(MessageEnvelope.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            